{"version":3,"file":"static/js/347.6ec270fc.chunk.js","mappings":"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","sources":["components/BookDetails/BookDetails.jsx","components/BookItem/BookItem.styled.js","components/BookItem/BookItem.jsx","components/Books/Books.styled.js","components/Dashboard/Dashboard.styled.js","components/NoBooksScreen/NoBooksScreen.styled.js","components/NoBooksScreen/NoBooksScreen.jsx","components/SuccessfulBookAdditionModal/ModalBookRead.styled.js","components/MenuDropdown/MenuDropdown.styled.js","components/MenuDropdown/MenuDropdown.jsx","components/Books/Books.jsx","components/RecommendedBooks/RecommendedBooks.styled.js","components/RecommendedBooks/RecommendedBooks.jsx","components/SuccessfulBookAdditionModal/SuccessfulBookAdditionModal.jsx","components/Dashboard/Dashboard.jsx","components/Lib/Lib.jsx","pages/LibPage.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { addBookById, ownBooks } from '../../redux/books/booksOperations';\nimport { selectOwnBooks } from '../../redux/books/booksSelectors';\nimport sprite from '../../img/sprite.svg';\nimport notFoundImg from '../../img/notFoundImg/open-book-desct.jpg';\nimport Btn from 'components/Btn/Btn';\nimport AlternativeImage from 'components/AlternativeImage/AlternativeImage';\nimport {\n  AuthorInfo,\n  CloseButton,\n  CoverImage,\n  PageCount,\n  StyledModal,\n  Title,\n} from './BookDetails.styled';\n\nexport default function BookDetails({ closeModals, bookData, btnLabel }) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const ownLibrary = useSelector(selectOwnBooks);\n\n  useEffect(() => {\n    dispatch(ownBooks());\n  }, [dispatch]);\n\n  const handleButtonClick = () => {\n    if (btnLabel === 'Add to library') {\n      const bookExists = ownLibrary.find(item => item.title === bookData.title);\n\n      if (!bookExists) {\n        toast.success('The addition of the book was successful');\n        dispatch(addBookById(bookData._id));\n      } else {\n        toast.error('The book has already been added to the library');\n      }\n    }\n\n    if (btnLabel === 'Start reading') navigate(`/reading/${bookData._id}`);\n\n    closeModals();\n  };\n\n  if (!bookData) {\n    return null;\n  }\n\n  return (\n    <StyledModal>\n      <CloseButton onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>\n      </CloseButton>\n\n      {bookData.imageUrl ? (\n        <CoverImage src={bookData.imageUrl} alt=\"cover\" />\n      ) : (\n        <AlternativeImage>\n          <CoverImage src={notFoundImg} alt=\"cover fallback\" />\n        </AlternativeImage>\n      )}\n\n      <Title>{bookData.title}</Title>\n      <AuthorInfo>{bookData.author}</AuthorInfo>\n      <PageCount>{bookData.totalPages} pages</PageCount>\n\n      <Btn label={btnLabel} onClick={handleButtonClick} prop=\"true\" />\n    </StyledModal>\n  );\n}\n","import color from 'global/GlobalColors';\nimport styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  width: 137px;\n  height: 248px;\n  background: transparent;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\nexport const BookImage = styled.img`\n  width: 137px;\n  height: 208px;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  background: ${color.gryeBlack};\n  cursor: pointer;\n`;\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const BookDetails = styled.div`\n  max-width: ${({ page }) => (page === 'true' ? '89px' : '137px')};\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 700;\n  margin-bottom: 2px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const Author = styled.p`\n  font-size: 10px;\n  color: ${color.gryeLight};\n  white-space: nowrap;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const DeleteButton = styled.button`\n  background: transparent;\n  transition: transform 0.25s linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import sprite from '../../img/sprite.svg';\nimport notFoundImg from '../../img/notFoundImg/open-book-desct.jpg';\nimport { useDispatch } from 'react-redux';\nimport { deleteBook } from '../../redux/books/booksOperations';\nimport AlternativeImage from 'components/AlternativeImage/AlternativeImage';\nimport {\n  Author,\n  BookDetails,\n  BookImage,\n  DeleteButton,\n  DetailsContainer,\n  ListItem,\n  Title,\n} from './BookItem.styled';\n\nexport default function BookItem({\n  book,\n  openLoginModal,\n  currentPage = false,\n}) {\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    dispatch(deleteBook(book._id));\n  };\n\n  return (\n    <ListItem>\n      {book.imageUrl ? (\n        <BookImage\n          src={book.imageUrl}\n          alt=\"book title\"\n          onClick={() => openLoginModal(book)}\n        />\n      ) : (\n        <AlternativeImage>\n          <BookImage\n            src={notFoundImg}\n            alt=\"book title\"\n            onClick={() => openLoginModal(book)}\n          />\n        </AlternativeImage>\n      )}\n      <DetailsContainer>\n        <BookDetails page={currentPage === 'MyLibrary' ? 'true' : ''}>\n          <Title>{book.title}</Title>\n          <Author>{book.author}</Author>\n        </BookDetails>\n\n        {currentPage === 'MyLibrary' && (\n          <DeleteButton onClick={handleDeleteClick}>\n            <svg width={28} height={28}>\n              <use href={`${sprite}#icon-dell`} />\n            </svg>\n          </DeleteButton>\n        )}\n      </DetailsContainer>\n    </ListItem>\n  );\n}\n","import styled from 'styled-components';\n\nexport const LibraryContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nexport const LibraryHeading = styled.h1`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.14;\n  @media (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\n\nexport const BookList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n\n  height: 260px;\n  overflow: hidden;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media (min-width: 768px) {\n    height: 523px;\n  }\n`;\n","import { ErrorMessage, Field } from 'formik';\nimport color from 'global/GlobalColors';\nimport styled from 'styled-components';\n\nexport const Heading = styled.h3`\n  font-size: 10px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  margin-left: 14px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 8px;\n  width: 100%;\n  max-width: 295px;\n  margin-bottom: 20px;\n\n  @media (min-width: 1440px) {\n    max-width: 313px;\n  }\n`;\n\nexport const FieldContainer = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 14px;\n  left: 14px;\n  font-size: 12px;\n  color: ${color.gryeLight};\n\n  @media (min-width: 768px) {\n    top: 16px;\n    font-size: 14px;\n  }\n`;\n\nexport const InputField = styled(Field)`\n  width: 100%;\n  height: 44px;\n  font-size: 12px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n\n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${props => props.paddindleft || '86px'};\n  border: 1px solid\n    ${props =>\n      props.error === 'true' ? color.focusColor : 'rgba(18, 20, 23, 0.1)'};\n  @media (min-width: 768px) {\n    height: 50px;\n    font-size: 14px;\n  }\n`;\n\nexport const TitleError = styled(ErrorMessage)`\n  font-size: 10px;\n  color: ${color.focusColor};\n  padding: 4px 0px 0px 14px;\n`;\n","import color from 'global/GlobalColors';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-top: 63px;\n  margin: 63px 0;\n\n  @media (min-width: 768px) {\n    margin: 86px 0 120px 0;\n  }\n  @media (min-width: 1440px) {\n    margin: 147px 0 0;\n  }\n`;\n\nexport const Picture = styled.picture`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: ${color.blackWhite};\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    width: 130px;\n    height: 130px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 50px;\n\n  @media (min-width: 768px) {\n    width: 70px;\n  }\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n  width: 274px;\n`;\n\nexport const ErrorText = styled.span`\n  color: ${color.gryeLight};\n`;\n","import imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport imgBooksMob from '../../img/stackBooksAndLike/books-mob.png';\nimport imgBooksMob2x from '../../img/stackBooksAndLike/books-mob@2x.png';\nimport {\n  Container,\n  ErrorText,\n  Img,\n  Message,\n  Picture,\n} from './NoBooksScreen.styled';\n\nexport default function NoBooksScreen({ purt }) {\n  return (\n    <Container>\n      <Picture>\n        <source\n          srcSet={`${imgBooksMob} 1x, ${imgBooksMob2x} 2x`}\n          media=\"(max-width: 767px)\"\n        />\n        <source\n          srcSet={`${imgBooksDesc} 1x, ${imgBooksDesc2x} 2x`}\n          media=\"(min-width: 766px)\"\n        />\n        <Img src={imgBooksDesc} alt=\"stack books\" />\n      </Picture>\n\n      {purt === 'Recomended' && (\n        <Message>\n          Oops <ErrorText>unfortunately</ErrorText> nothing was found\n        </Message>\n      )}\n      {purt === 'MyLibraryBooks' && (\n        <Message>\n          To start training, add <ErrorText>some of your books</ErrorText> or\n          from the recommended ones\n        </Message>\n      )}\n    </Container>\n  );\n}\n","import color from 'global/GlobalColors';\nimport styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 342px;\n  height: 290px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 60px 46px;\n\n  @media (min-width: 768px) {\n    padding: 49px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n  transition: transform 0.25s linear;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    right: 16px;\n  }\n`;\n","import styled from 'styled-components';\nimport color from 'global/GlobalColors';\n\nexport const DropdownContainer = styled.div`\n  position: relative;\n`;\n\nexport const ChevronIcon = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  cursor: pointer;\n`;\n\nexport const ToggleButton = styled.button`\n  display: flex;\n  align-items: center;\n  width: 120px;\n  height: 40px;\n  border-radius: 12px;\n  border: 1px solid ${color.charcoalGray};\n  outline: none;\n  cursor: pointer;\n  font-size: 12px;\n  background: transparent;\n  padding: 12px 14px;\n\n  @media (min-width: 768px) {\n    width: 153px;\n    height: 46px;\n    padding: 14px;\n    font-size: 14px;\n  }\n`;\n\nexport const OptionList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 120%;\n  left: 0;\n  color: ${color.gryeLight};\n  background-color: ${color.gryeBlack};\n  border-top: none;\n  list-style: none;\n  padding: 14px;\n  margin: 0;\n  width: 100%;\n  border-radius: 12px;\n  display: ${props => (props.open ? 'block' : 'none')};\n`;\n\nexport const OptionItem = styled.li`\n  cursor: pointer;\n  font-size: 12px;\n\n  &:not(:last-child) {\n    margin-bottom: 7px;\n  }\n  &:hover {\n    color: ${color.whitePrimary};\n  }\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport sprite from '../../img/sprite.svg';\nimport {\n  ChevronIcon,\n  DropdownContainer,\n  OptionItem,\n  OptionList,\n  ToggleButton,\n} from './MenuDropdown.styled';\n\nconst options = ['Unread', 'In progress', 'Done', 'All books'];\n\nexport default function MenuDropdown({\n  selectedBooks,\n  handleSelectedBooks,\n  isOpen,\n  setIsOpen,\n}) {\n  const selectRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [setIsOpen]);\n\n  const toggleDropdown = event => {\n    event.stopPropagation();\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = book => {\n    handleSelectedBooks(book);\n    setIsOpen(false);\n  };\n\n  return (\n    <DropdownContainer ref={selectRef}>\n      <ToggleButton onClick={toggleDropdown}>\n        {selectedBooks || 'All books'}\n        <ChevronIcon width={16} height={16}>\n          <use href={`${sprite}#icon-chevron-${isOpen ? 'upp' : 'down'}`} />\n        </ChevronIcon>\n      </ToggleButton>\n      <OptionList open={isOpen}>\n        {options.map(book => (\n          <OptionItem key={book} onClick={() => handleOptionClick(book)}>\n            {book}\n          </OptionItem>\n        ))}\n      </OptionList>\n    </DropdownContainer>\n  );\n}\n","import BookDetails from 'components/BookDetails/BookDetails';\nimport CustomPortalModal from 'components/CustomPortalModal/CustomPortalModal';\nimport GeneralMainWrapper from 'components/GeneralMainWrapper/GeneralMainWrapper';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ownBooks } from '../../redux/books/booksOperations';\nimport { selectOwnBooks } from '../../redux/books/booksSelectors';\nimport { BookList, LibraryContainer, LibraryHeading } from './Books.styled';\nimport MenuDropdown from 'components/MenuDropdown/MenuDropdown';\nimport NoBooksScreen from 'components/NoBooksScreen/NoBooksScreen';\nimport BookItem from 'components/BookItem/BookItem';\n\nexport default function Books() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const ownLibrary = useSelector(selectOwnBooks);\n  const [selectedBooks, setSelectedBooks] = useState('');\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(ownBooks());\n  }, [dispatch]);\n\n  const openLoginModal = book => {\n    setModalOpen(true);\n    setBookData(book);\n  };\n\n  const handleSelectedBooks = e => {\n    setSelectedBooks(e);\n    if (e === 'Done') dispatch(ownBooks('done'));\n    if (e === 'In progress') dispatch(ownBooks('in-progress'));\n    if (e === 'All books') dispatch(ownBooks());\n    if (e === 'Unread') dispatch(ownBooks('unread'));\n  };\n\n  return (\n    <GeneralMainWrapper>\n      <LibraryContainer>\n        <LibraryHeading>My library</LibraryHeading>\n        <MenuDropdown\n          selectedBooks={selectedBooks}\n          handleSelectedBooks={handleSelectedBooks}\n          isOpen={isOpen}\n          setIsOpen={setIsOpen}\n        />\n      </LibraryContainer>\n\n      {ownLibrary.length === 0 ? (\n        <NoBooksScreen purt=\"MyLibraryBooks\" />\n      ) : (\n        <BookList>\n          {Array.isArray(ownLibrary) &&\n            ownLibrary.map(book => (\n              <BookItem\n                key={book._id}\n                book={book}\n                openLoginModal={openLoginModal}\n                currentPage=\"MyLibrary\"\n              />\n            ))}\n        </BookList>\n      )}\n\n      <CustomPortalModal active={modalOpen} setActive={setModalOpen}>\n        <BookDetails\n          bookData={bookData}\n          closeModals={() => setModalOpen()}\n          btnLabel=\"Start reading\"\n        />\n      </CustomPortalModal>\n    </GeneralMainWrapper>\n  );\n}\n","import color from 'global/GlobalColors';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const RecommendedBooksContainer = styled.div`\n  width: 100%;\n  max-width: 295px;\n  height: 244px;\n  border-radius: 12px;\n  background: ${color.gryeBlack};\n  padding: 20px;\n  margin-top: 20px;\n\n  @media (min-width: 768px) {\n    max-width: 313px;\n    height: 272px;\n    padding: 26px 20px;\n    margin-top: 0px;\n  }\n  @media (min-width: 1440px) {\n    height: 259px;\n    padding: 20px;\n  }\n`;\n\nexport const RecommendedBooksHeading = styled.h4`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const BooksList = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n\n  @media (max-width: 385px) {\n    gap: 4px;\n  }\n`;\n\nexport const BookListItem = styled.li`\n  width: 71px;\n  height: 141px;\n`;\n\nexport const BookImage = styled.img`\n  width: 71px;\n  height: 107px;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  cursor: pointer;\n`;\n\nexport const BookTitle = styled.h4`\n  font-size: 10px;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const BookAuthor = styled.p`\n  font-size: 10px;\n  color: ${color.gryeLight};\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const HomeLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${color.gryeLight};\n  margin: auto 0;\n\n  &:hover::after,\n  &:focus::after {\n    color: red;\n  }\n`;\n\nexport const HomeText = styled.p`\n  position: relative;\n  font-size: 12px;\n  transition: color 0.3s linear;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px;\n    height: 1px;\n    background: ${color.gryeLight};\n    transition: background 0.3s linear;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    &::after {\n      background: ${color.whitePrimary};\n    }\n  }\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  transition: transform 0.25s ease;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBooks } from '../../redux/books/booksOperations';\nimport { selectBookData } from '../../redux/books/booksSelectors';\nimport sprite from '../../img/sprite.svg';\nimport {\n  ArrowIcon,\n  BookAuthor,\n  BookImage,\n  BookListItem,\n  BookTitle,\n  BooksList,\n  HomeLink,\n  HomeText,\n  RecommendedBooksContainer,\n  RecommendedBooksHeading,\n} from './RecommendedBooks.styled';\nimport CustomPortalModal from 'components/CustomPortalModal/CustomPortalModal';\nimport BookDetails from 'components/BookDetails/BookDetails';\n\nconst RecommendedBooks = () => {\n  const [openModal, setOpenModal] = useState(false);\n  const [bookData, setBookData] = useState(false);\n  const results = useSelector(selectBookData);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchBooks({ page: 1, limit: 10 }));\n  }, [dispatch]);\n\n  const openLoginModal = book => {\n    setOpenModal(true);\n    setBookData(book);\n  };\n\n  return (\n    <div>\n      <RecommendedBooksContainer>\n        <RecommendedBooksHeading>Recommended books</RecommendedBooksHeading>\n        <BooksList>\n          {results?.slice(3, 6).map(book => (\n            <BookListItem key={book._id}>\n              <BookImage\n                src={book.imageUrl}\n                alt={book.title}\n                onClick={() => openLoginModal(book)}\n              />\n              <BookTitle>{book.title}</BookTitle>\n              <BookAuthor>{book.author}</BookAuthor>\n            </BookListItem>\n          ))}\n        </BooksList>\n        <HomeLink to=\"/recommended\">\n          <HomeText>Home </HomeText>\n          <ArrowIcon>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </ArrowIcon>\n        </HomeLink>\n      </RecommendedBooksContainer>\n\n      <CustomPortalModal active={openModal} setActive={setOpenModal}>\n        <BookDetails\n          bookData={bookData}\n          closeModals={() => setOpenModal()}\n          btnLabel=\"Add to library\"\n        />\n      </CustomPortalModal>\n    </div>\n  );\n};\n\nexport default RecommendedBooks;\n","import sprite from '../../img/sprite.svg';\nimport likeDesktop2x from '../../img/stackBooksAndLike/like-desc@2x.png';\nimport likeDesktop from '../../img/stackBooksAndLike/like-desc.png';\nimport likeMobile2x from '../../img/stackBooksAndLike/like-mob@2x.png';\nimport likeMobile from '../../img/stackBooksAndLike/like-mob.png';\nimport {\n  Heading,\n  Img,\n  LibraryName,\n  SuccessMessage,\n} from 'components/BookDetails/BookDetails.styled';\nimport { CloseButton, ModalContainer } from './ModalBookRead.styled';\n\nexport default function SuccessfulBookAdditionModal({ closeModals }) {\n  return (\n    <ModalContainer>\n      <CloseButton onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>\n      </CloseButton>\n      <picture>\n        <source\n          srcSet={`${likeMobile} 1x, ${likeMobile2x} 2x`}\n          media=\"(max-width: 767px)\"\n        />\n        <source\n          srcSet={`${likeDesktop} 1x, ${likeDesktop2x} 2x`}\n          media=\"(min-width: 768px)\"\n        />\n        <Img src={likeDesktop} alt=\"add book\" />\n      </picture>\n      <SuccessMessage>Good job</SuccessMessage>\n      <Heading>\n        Your book is now in <LibraryName>the library!</LibraryName> The joy\n        knows no bounds and now you can start your training\n      </Heading>\n    </ModalContainer>\n  );\n}\n","import Btn from 'components/Btn/Btn';\nimport DashboardWrapper from 'components/DashboardWrapper/DashboardWrapper';\nimport { Form, Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addNewBook, ownBooks } from '../../redux/books/booksOperations';\nimport { selectOwnBooks } from '../../redux/books/booksSelectors';\nimport * as Yup from 'yup';\nimport {\n  FieldContainer,\n  FormContainer,\n  Heading,\n  InputField,\n  Label,\n  TitleError,\n} from './Dashboard.styled';\nimport CustomPortalModal from 'components/CustomPortalModal/CustomPortalModal';\nimport RecommendedBooks from 'components/RecommendedBooks/RecommendedBooks';\nimport SuccessfulBookAdditionModal from 'components/SuccessfulBookAdditionModal/SuccessfulBookAdditionModal';\n\nconst initialValues = {\n  title: '',\n  author: '',\n  page: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string().required('Required'),\n  author: Yup.string().required('Required'),\n  page: Yup.string()\n    .required('Required')\n    .matches(/^[0-9]+$/, 'Must be only digits')\n    .transform((value, originalValue) => originalValue.replace(/\\s/g, '')),\n});\n\nexport default function Dashboard() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookExists, setBookExists] = useState(false);\n  const ownLibrary = useSelector(selectOwnBooks);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(ownBooks());\n  }, [dispatch]);\n\n  const handleSubmit = (e, { resetForm }) => {\n    const title = e.title;\n    const author = e.author;\n    const page = parseInt(e.page);\n\n    if (page) {\n      const bookExists = ownLibrary.find(item => item.title === title);\n\n      if (bookExists === undefined) {\n        dispatch(addNewBook({ title, author, totalPages: page }));\n        setModalOpen(true);\n        setBookExists(false);\n        resetForm();\n      } else {\n        setBookExists(true);\n        toast.error('The book is already in the library');\n      }\n    }\n    document.getElementById('page').blur();\n  };\n\n  return (\n    <DashboardWrapper>\n      <div>\n        <Heading>Create your library:</Heading>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched, resetForm }) => (\n            <Form>\n              <FormContainer>\n                <FieldContainer>\n                  <Label htmlFor=\"title\">Book title:</Label>\n                  <InputField\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"title\"\n                    placeholder=\"I See You Are...\"\n                    error={errors.title && touched.title ? 'true' : 'false'}\n                    style={bookExists ? { borderColor: 'red' } : {}}\n                  />\n                  <TitleError name=\"title\" component=\"div\" />\n                </FieldContainer>\n                <FieldContainer>\n                  <Label htmlFor=\"author\">The author:</Label>\n                  <InputField\n                    id=\"author\"\n                    name=\"author\"\n                    type=\"author\"\n                    placeholder=\"Hilarion Pavlyuk\"\n                    paddindleft=\"95px\"\n                    error={errors.author && touched.author ? 'true' : 'false'}\n                  />\n                  <TitleError name=\"author\" component=\"div\" />\n                </FieldContainer>\n                <FieldContainer>\n                  <Label htmlFor=\"page\">Number of pages:</Label>\n                  <InputField\n                    id=\"page\"\n                    name=\"page\"\n                    type=\"page\"\n                    placeholder=\"664\"\n                    paddindleft=\"135px\"\n                    error={errors.page && touched.page ? 'true' : 'false'}\n                  />\n                  <TitleError name=\"page\" component=\"div\" />\n                </FieldContainer>\n              </FormContainer>\n              <Btn label=\"Add book\" />\n            </Form>\n          )}\n        </Formik>\n      </div>\n\n      <RecommendedBooks />\n      <CustomPortalModal active={modalOpen} setActive={setModalOpen}>\n        <SuccessfulBookAdditionModal closeModals={() => setModalOpen()} />\n      </CustomPortalModal>\n    </DashboardWrapper>\n  );\n}\n","import Block from 'components/Block/Block';\nimport Books from 'components/Books/Books';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport React from 'react';\n\nexport default function Lib() {\n  return (\n    <Block>\n      <Dashboard />\n      <Books />\n    </Block>\n  );\n}\n","import Lib from 'components/Lib/Lib';\n\nexport default function LibPage() {\n  return <Lib />;\n}\n"],"names":["BookDetails","_ref","closeModals","bookData","btnLabel","dispatch","useDispatch","navigate","useNavigate","ownLibrary","useSelector","selectOwnBooks","useEffect","ownBooks","_jsxs","StyledModal","children","_jsx","CloseButton","onClick","width","height","href","concat","sprite","imageUrl","CoverImage","src","alt","AlternativeImage","notFoundImg","Title","title","AuthorInfo","author","PageCount","totalPages","Btn","label","find","item","toast","addBookById","_id","prop","ListItem","styled","_templateObject","_taggedTemplateLiteral","BookImage","_templateObject2","color","DetailsContainer","_templateObject3","_templateObject4","page","_templateObject5","Author","_templateObject6","DeleteButton","_templateObject7","BookItem","book","openLoginModal","_ref$currentPage","currentPage","deleteBook","LibraryContainer","LibraryHeading","BookList","Heading","FormContainer","FieldContainer","Label","InputField","Field","props","paddindleft","error","TitleError","ErrorMessage","Container","Picture","Img","Message","ErrorText","NoBooksScreen","purt","srcSet","imgBooksMob","imgBooksMob2x","media","imgBooksDesc","imgBooksDesc2x","ModalContainer","DropdownContainer","ChevronIcon","ToggleButton","OptionList","open","OptionItem","options","MenuDropdown","selectedBooks","handleSelectedBooks","isOpen","setIsOpen","selectRef","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","stopPropagation","map","handleOptionClick","Books","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","_useState7","_useState8","setSelectedBooks","GeneralMainWrapper","e","length","Array","isArray","CustomPortalModal","active","setActive","RecommendedBooksContainer","RecommendedBooksHeading","BooksList","BookListItem","BookTitle","BookAuthor","HomeLink","NavLink","_templateObject8","HomeText","_templateObject9","ArrowIcon","_templateObject10","openModal","setOpenModal","results","selectBookData","fetchBooks","limit","slice","to","SuccessfulBookAdditionModal","likeDesktop","likeDesktop2x","SuccessMessage","LibraryName","initialValues","schema","Yup","required","matches","transform","value","originalValue","replace","Dashboard","bookExists","setBookExists","DashboardWrapper","Formik","validationSchema","onSubmit","resetForm","parseInt","undefined","addNewBook","getElementById","blur","_ref2","errors","touched","Form","htmlFor","id","name","type","placeholder","style","borderColor","component","RecommendedBooks","Lib","Block","LibPage"],"sourceRoot":""}