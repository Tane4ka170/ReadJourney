{"version":3,"file":"static/js/736.6208bebc.chunk.js","mappings":"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","sources":["components/Auth/Auth.styled.jsx","components/AuthorizationImage/AuthorizationImage.styled.js","components/AuthorizationImage/AuthorizationImage.jsx","components/AuthorizationSubmissionBlock/AuthorizationSubmissionBlock.styled.js","components/HeaderLogoTitle/HeaderLogoTitle.styled.js","components/HeaderLogoTitle/HeaderLogoTitle.jsx","components/AuthorizationSubmissionBlock/RegistrationSubmissionBlock.jsx","components/Auth/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { ErrorMessage, Field } from 'formik';\nimport color from 'global/GlobalColors';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: 20px;\n\n  @media (min-width: 768px) {\n    gap: 16px;\n    flex-direction: row;\n    justify-content: center;\n    padding: 32px;\n  }\n`;\nexport const FormBlock = styled.div`\n  width: 100%;\n  max-width: 335px;\n  min-height: 411px;\n  background: ${color.blackLight};\n  border-radius: 30px;\n  padding: 20px 20px 40px 20px;\n\n  @media (min-width: 768px) {\n    max-width: 704px;\n    height: 960px;\n    padding: 40px 64px;\n  }\n  @media (min-width: 1440px) {\n    max-width: 600px;\n    height: 736px;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 210px;\n\n  @media (min-width: 768px) {\n    height: 308px;\n  }\n`;\n\nexport const FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n\nexport const FieldContainer = styled.div`\n  position: relative;\n  max-width: 295px;\n\n  @media (min-width: 768px) {\n    max-width: 472px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 13px;\n  left: 14px;\n  color: ${color.gryeLight};\n\n  @media (min-width: 768px) {\n    top: 16px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  width: 100%;\n  max-width: 295px;\n\n  height: 44px;\n  border: 1px solid\n    ${props => (props.error === 'true' ? 'red' : 'rgba(18, 20, 23, 0.1)')};\n  border-radius: 12px;\n  padding: 14px;\n  padding-left: ${props => props.paddingleft || '65px'};\n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n\n  @media (min-width: 768px) {\n    max-width: 472px;\n    height: 50px;\n    padding: 16px 14px 16px 65px;\n    padding-left: ${props => props.paddingleft || '65px'};\n  }\n`;\n\nexport const Icon = styled.svg`\n  position: absolute;\n  top: 13px;\n  right: 13px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n\n  @media (min-width: 768px) {\n    top: 17px;\n    right: 17px;\n  }\n`;\n\nexport const ErrorFeedback = styled(ErrorMessage)`\n  font-size: 10px;\n  color: red;\n  padding: 4px 0px 0px 14px;\n`;\nexport const FeedbackMessage = styled.p`\n  font-size: 10px;\n  color: ${color.green};\n  padding: 4px 0px 0px 14px;\n`;\n","import styled from 'styled-components';\n\nexport const MainImage = styled.img`\n  display: block;\n  border-radius: 30px;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n\n  @media (min-width: 1440px) {\n    display: block;\n    max-width: 100%;\n    height: 736px;\n  }\n`;\n","import desktopImg from '../../img/fon/desctop-block.jpg';\nimport desktopImg2x from '../../img/fon/desctop-block@2x.jpg';\nimport mobileImg from '../../img/fon/mob-block.jpg';\nimport mobileImg2x from '../../img/fon/mob-block@2x.jpg';\nimport { MainImage } from './AuthorizationImage.styled';\n\nexport default function AuthorizationImage() {\n  return (\n    <picture>\n      <source\n        srcSet={`${mobileImg} 1x, ${mobileImg2x} 2x`}\n        media=\"(max-width: 767px)\"\n      />\n      <source\n        srcSet={`${desktopImg} 1x, ${desktopImg2x} 2x`}\n        media=\"(min-width: 1440px)\"\n      />\n      <MainImage src={desktopImg} alt=\"register img\" />\n    </picture>\n  );\n}\n","import color from 'global/GlobalColors';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ActionButton = styled.button`\n  border-radius: 30px;\n  color: ${color.blackLight};\n  background: ${color.darkGgeen};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1;\n  margin-right: 14px;\n  padding: ${props => (props.log === 'login' ? '12px 45px' : '12px 29px')};\n  transition: color 0.3s linear, background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    background: ${color.blackLight};\n    box-shadow: 0 0 0 2px ${color.whiteLightTranslucent};\n  }\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    margin-right: 20px;\n    padding: 16px 54px;\n  }\n`;\n\nexport const ActionLink = styled(NavLink)`\n  position: relative;\n  font-weight: 500;\n  font-size: 12px;\n  letter-spacing: -0.2px;\n  color: ${color.gryeLight};\n  transition: color 0.3s linear;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -3px;\n    height: 1px;\n    background: ${color.gryeLight};\n    transition: background 0.3s linear;\n  }\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n\n    &::after {\n      background: ${color.whitePrimary};\n    }\n  }\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n","import color from 'global/GlobalColors';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n`;\nexport const CustomLogo = styled.div`\n  margin-bottom: 40px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 108px;\n  }\n`;\n\nexport const TitleHeading = styled.h2`\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 1;\n\n  @media (min-width: 768px) {\n    width: 444px;\n    font-size: 64px;\n    line-height: 0.94;\n  }\n`;\n\nexport const HighlightedText = styled.span`\n  color: ${color.whiteTranslucent};\n`;\n","import Logo from 'components/Logo/Logo';\nimport {\n  CustomLogo,\n  HighlightedText,\n  TitleHeading,\n  Wrapper,\n} from './HeaderLogoTitle.styled';\n\nexport default function HeaderLogoTitle() {\n  return (\n    <Wrapper>\n      <CustomLogo>\n        <Logo />\n      </CustomLogo>\n      <TitleHeading>\n        Expand your mind, reading <HighlightedText>a book</HighlightedText>\n      </TitleHeading>\n    </Wrapper>\n  );\n}\n","import {\n  ActionButton,\n  ActionLink,\n} from './AuthorizationSubmissionBlock.styled';\n\nexport default function RegistrationSubmissionBlock() {\n  return (\n    <div>\n      <ActionButton type=\"submit\">Registration</ActionButton>\n      <ActionLink to=\"/login\">Already have an account?</ActionLink>\n    </div>\n  );\n}\n","import { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport sprite from '../../img/sprite.svg';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../redux/auth/authOperations';\nimport { toast } from 'react-toastify';\nimport {\n  Container,\n  ErrorFeedback,\n  FeedbackMessage,\n  FieldContainer,\n  FormBlock,\n  FormContainer,\n  FormGroup,\n  Icon,\n  Label,\n  StyledField,\n} from './Auth.styled';\nimport RegistrationSubmissionBlock from 'components/AuthorizationSubmissionBlock/RegistrationSubmissionBlock';\nimport AuthorizationImage from 'components/AuthorizationImage/AuthorizationImage';\nimport HeaderLogoTitle from 'components/HeaderLogoTitle/HeaderLogoTitle';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = Yup.object({\n  name: Yup.string()\n    .required('Required')\n    .min(2, 'The name must have at least 2 letters'),\n  email: Yup.string()\n    .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address')\n    .required('Required'),\n  password: Yup.string()\n    .required('Required')\n    .min(7, 'Password must be at least 7 characters'),\n});\n\nexport default function Register() {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const handleSubmit = async values => {\n    try {\n      await dispatch(register(values)).unwrap();\n      navigate('/recommended');\n    } catch (error) {\n      if (error === 'Request failed with status code 409') {\n        toast.error('A user with this email address already exists');\n      } else {\n        toast.error('Registration was unsuccessful. Please try again later.');\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <FormBlock>\n        <HeaderLogoTitle />\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched }) => (\n            <Form>\n              <FormContainer>\n                <FormGroup>\n                  <FieldContainer>\n                    <Label htmlFor=\"name\">Name:</Label>\n                    <StyledField\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"name\"\n                      placeholder=\"Nik Ovson\"\n                      error={errors.name && touched.name ? 'true' : 'false'}\n                      paddingleft=\"65px\"\n                      style={{\n                        borderColor:\n                          touched.name && errors.name\n                            ? 'red'\n                            : touched.name && !errors.name\n                            ? 'green'\n                            : 'defaultColor',\n                      }}\n                    />\n                    {touched.name &&\n                      (errors.name ? (\n                        <Icon width={20} height={20}>\n                          <use href={`${sprite}#icon-pajamas_error`} />\n                        </Icon>\n                      ) : (\n                        <Icon width={20} height={20}>\n                          <use href={`${sprite}#icon-check-ok`} />\n                        </Icon>\n                      ))}\n                    {touched.name && !errors.name && (\n                      <FeedbackMessage>Name is secure</FeedbackMessage>\n                    )}\n                    <ErrorFeedback name=\"name\" component=\"div\" />\n                  </FieldContainer>\n\n                  <FieldContainer>\n                    <Label htmlFor=\"email\">Mail:</Label>\n                    <StyledField\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"nik@google.com\"\n                      error={errors.email && touched.email ? 'true' : 'false'}\n                      paddingleft=\"53px\"\n                      style={{\n                        borderColor:\n                          touched.email && errors.email\n                            ? 'red'\n                            : touched.email && !errors.email\n                            ? 'green'\n                            : 'defaultColor',\n                      }}\n                    />\n                    {touched.email &&\n                      (errors.email ? (\n                        <Icon width={20} height={20}>\n                          <use href={`${sprite}#icon-pajamas_error`} />\n                        </Icon>\n                      ) : (\n                        <Icon width={20} height={20}>\n                          <use href={`${sprite}#icon-check-ok`} />\n                        </Icon>\n                      ))}\n                    {touched.email && !errors.email && (\n                      <FeedbackMessage>Email is secure</FeedbackMessage>\n                    )}\n                    <ErrorFeedback name=\"email\" component=\"div\" />\n                  </FieldContainer>\n\n                  <FieldContainer>\n                    <Label htmlFor=\"password\">Password:</Label>\n                    <StyledField\n                      id=\"password\"\n                      name=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"********\"\n                      paddingleft=\"86px\"\n                      style={{\n                        borderColor:\n                          touched.password && errors.password\n                            ? 'red'\n                            : touched.password && !errors.password\n                            ? 'green'\n                            : 'defaultColor',\n                      }}\n                    />\n\n                    {errors.password && touched.password ? (\n                      <Icon width={20} height={20}>\n                        <use href={`${sprite}#icon-pajamas_error`} />\n                      </Icon>\n                    ) : !errors.password && touched.password ? (\n                      <Icon width={20} height={20}>\n                        <use href={`${sprite}#icon-check-ok`} />\n                      </Icon>\n                    ) : showPassword ? (\n                      <Icon\n                        width={20}\n                        height={20}\n                        onMouseDown={e => {\n                          e.preventDefault();\n                          togglePasswordVisibility();\n                        }}\n                      >\n                        <use href={`${sprite}#icon-eye`} />\n                      </Icon>\n                    ) : (\n                      <Icon\n                        width={20}\n                        height={20}\n                        onMouseDown={e => {\n                          e.preventDefault();\n                          togglePasswordVisibility();\n                        }}\n                      >\n                        <use href={`${sprite}#icon-eye-off`} />\n                      </Icon>\n                    )}\n\n                    {touched.password && !errors.password && (\n                      <FeedbackMessage>Password is secure</FeedbackMessage>\n                    )}\n                    <ErrorFeedback name=\"password\" component=\"div\" />\n                  </FieldContainer>\n                </FormGroup>\n\n                <div style={{ marginTop: 'auto' }}>\n                  <RegistrationSubmissionBlock />\n                </div>\n              </FormContainer>\n            </Form>\n          )}\n        </Formik>\n      </FormBlock>\n      <AuthorizationImage />\n    </Container>\n  );\n}\n","import Register from 'components/Auth/Register';\n\nexport default function RegisterPage() {\n  return <Register />;\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","FormBlock","_templateObject2","color","FormContainer","_templateObject3","FormGroup","_templateObject4","FieldContainer","_templateObject5","Label","_templateObject6","StyledField","Field","_templateObject7","props","error","paddingleft","Icon","_templateObject8","ErrorFeedback","ErrorMessage","_templateObject9","FeedbackMessage","_templateObject10","MainImage","AuthorizationImage","_jsxs","children","_jsx","srcSet","concat","mobileImg","mobileImg2x","media","desktopImg","desktopImg2x","src","alt","ActionButton","log","ActionLink","NavLink","Wrapper","CustomLogo","TitleHeading","HighlightedText","HeaderLogoTitle","Logo","RegistrationSubmissionBlock","type","to","initialValues","name","email","password","schema","Yup","required","min","matches","Register","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","register","unwrap","t0","toast","stop","_x","apply","arguments","Formik","validationSchema","onSubmit","_ref2","errors","touched","Form","htmlFor","id","placeholder","style","borderColor","width","height","href","sprite","component","onMouseDown","e","preventDefault","marginTop","RegisterPage"],"sourceRoot":""}